Here is a C program using pcap.h to listen for SNMP data on port 162 on the ens32 interface and write the captured data to a text file. The program also checks the file size and resets it when it reaches 500 MB.

#include <stdio.h>
#include <pcap.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/ip.h>
#include <netinet/udp.h>

#define SNAP_LEN 1518
#define SIZE_LIMIT 500 * 1024 * 1024  // 500 MB

void packet_handler(u_char *user_data, const struct pcap_pkthdr *pkthdr, const u_char *packet) {
    static long file_size = 0;
    FILE *file = (FILE *)user_data;

    // Write packet data to the file
    fwrite(packet, pkthdr->len, 1, file);
    file_size += pkthdr->len;

    // Check if the file has reached the size limit
    if (file_size >= SIZE_LIMIT) {
        // Reset the file by reopening it (null out)
        freopen("snmp_data.txt", "w", file);
        file_size = 0;
    }
}

int main() {
    char errbuf[PCAP_ERRBUF_SIZE];
    pcap_t *handle;

    // Open the ens32 interface
    handle = pcap_open_live("ens32", SNAP_LEN, 1, 1000, errbuf);
    if (handle == NULL) {
        fprintf(stderr, "Could not open device: %s\n", errbuf);
        return 2;
    }

    // Compile the filter for port 162 (SNMP trap) and UDP protocol
    struct bpf_program fp;
    char filter_exp[] = "udp port 162";
    if (pcap_compile(handle, &fp, filter_exp, 0, PCAP_NETMASK_UNKNOWN) == -1) {
        fprintf(stderr, "Could not parse filter: %s\n", pcap_geterr(handle));
        return 2;
    }
    if (pcap_setfilter(handle, &fp) == -1) {
        fprintf(stderr, "Could not install filter: %s\n", pcap_geterr(handle));
        return 2;
    }

    // Open file for writing
    FILE *file = fopen("snmp_data.txt", "w");
    if (!file) {
        perror("Could not open file");
        return 1;
    }

    // Start capturing packets
    pcap_loop(handle, 0, packet_handler, (u_char *)file);

    // Cleanup
    fclose(file);
    pcap_close(handle);
    return 0;
}

Explanation:

1. pcap_open_live: Opens the ens32 interface for live capture.


2. pcap_compile/setfilter: Sets a filter to capture only SNMP data (UDP on port 162).


3. packet_handler: Writes each packet to a file and resets the file if its size exceeds 500 MB.


4. freopen: Resets the file once the size limit is reached.



Compile with -lpcap to link the pcap library:

gcc snmp_listener.c -o snmp_listener -lpcap

